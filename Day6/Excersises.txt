Dictionary Exercises
1Ô∏è‚É£ Create & Access Dictionary: Create a dictionary with personal details and access values.
2Ô∏è‚É£ Modify a Dictionary: Add a new key-value pair, update an existing key, and delete a key.
3Ô∏è‚É£ Loop Through a Dictionary: Print all keys and values using a loop.
4Ô∏è‚É£ Check If a Key Exists: Write a function to check if a given key exists in a dictionary.
5Ô∏è‚É£ Merge Two Dictionaries: Combine two dictionaries into one.
6Ô∏è‚É£ Dictionary Comprehension: Generate a dictionary with numbers as keys and squares as values.
7Ô∏è‚É£ Word Frequency Counter: Count the frequency of words in a string using a dictionary.
8Ô∏è‚É£ Sort a Dictionary by Value: Sort a dictionary in descending order based on values.
9Ô∏è‚É£ Convert Lists to Dictionary: Convert two lists (keys & values) into a dictionary.
üîü Nested Dictionary: Access and modify elements in a nested dictionary.

Lambda Function Exercises
1Ô∏è‚É£ Basic Lambda: Create a lambda function to add two numbers.
2Ô∏è‚É£ Lambda with map(): Use map() and a lambda function to square a list of numbers.
3Ô∏è‚É£ Lambda with filter(): Use filter() to extract even numbers from a list.
4Ô∏è‚É£ Lambda with sorted(): Sort a list of tuples based on the second element using a lambda function.
5Ô∏è‚É£ Conditional Lambda: Write a lambda function to return the maximum of two numbers.
6Ô∏è‚É£ Lambda in a Function: Write a function that returns a lambda to multiply by a given number.
7Ô∏è‚É£ Lambda with reduce(): Use reduce() and a lambda function to calculate the product of a list.
8Ô∏è‚É£ Lambda in List Comprehension: Apply a lambda function inside a list comprehension to double elements.
9Ô∏è‚É£ Lambda with Dictionary Sorting: Sort a dictionary by values using a lambda function.